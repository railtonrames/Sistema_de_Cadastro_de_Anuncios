//Formulário de Alteração e Exclusão
package VIEW;

import DAO.AnuncioDAO;
import DTO.AnuncioDTO;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

public class FrmUpdateDeleteVIEW extends javax.swing.JFrame {

    //Inicializa componentes, lista todos os registros e coloca máscara nos campos de data.
    public FrmUpdateDeleteVIEW() {
        initComponents();
        listarTodos();
        formatarCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        txtIvstDia = new javax.swing.JTextField();
        txtDataIni = new javax.swing.JFormattedTextField();
        btnAlterar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRegistros = new javax.swing.JTable();
        txtDataFim = new javax.swing.JFormattedTextField();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        lbCliente = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        lbId = new javax.swing.JLabel();
        lbAnuncio = new javax.swing.JLabel();
        btnSelecionar = new javax.swing.JButton();
        txtAnuncio = new javax.swing.JTextField();
        lbInicio = new javax.swing.JLabel();
        lbFim = new javax.swing.JLabel();
        lbIvstDia = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTitulo.setText("Alterar/Excluir Registros");

        btnAlterar.setBackground(new java.awt.Color(255, 153, 0));
        btnAlterar.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        tbRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Anúncio", "Cliente", "Início", "Término", "Invest. p/ Dia"
            }
        ));
        jScrollPane1.setViewportView(tbRegistros);

        btnExcluir.setBackground(new java.awt.Color(255, 51, 51));
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        txtId.setEnabled(false);

        lbCliente.setText("Cliente:");

        lbId.setText("ID:");

        lbAnuncio.setText("Anúncio:");

        btnSelecionar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        lbInicio.setText("Início:");

        lbFim.setText("Fim:");

        lbIvstDia.setText("Investimento por Dia:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTitulo)
                                .addGap(0, 959, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbId)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbAnuncio)
                                        .addComponent(lbCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lbInicio, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCliente)
                                    .addComponent(txtAnuncio)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbFim)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbIvstDia)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtIvstDia))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addComponent(jScrollPane1)
                    .addComponent(btnSelecionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAnuncio)
                    .addComponent(txtAnuncio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCliente)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbInicio)
                    .addComponent(txtDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFim)
                    .addComponent(lbIvstDia)
                    .addComponent(txtIvstDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        //Abre o formulário de menu e fecha o formulário atual caso o botão 'btnVoltar' tenha sido acionado.
        new FrmMenuVIEW().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        carregarCampos();
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        //Verifica se há campo vazio.
        if (txtAnuncio.getText().isEmpty()
                || txtCliente.getText().isEmpty()
                || "__/__/____".equals(txtDataIni.getText())
                || "__/__/____".equals(txtDataFim.getText())
                || txtIvstDia.getText().isEmpty()
                || txtId.getText().isEmpty()) {
            System.out.println(txtDataIni.getText());
            JOptionPane.showMessageDialog(null, "Por favor preencha todos os campos !", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            alterarAnuncio();
            listarTodos();
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        //Perguta se o usuário quer realmente excluir o registro e caso seja sim chama as funções de excluir o registro, depois lista e limpar os campos.
        int confirmacao = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esse registro?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (confirmacao == JOptionPane.YES_OPTION) {
            excluirRegistro();
            listarTodos();
            limpaCampos();
        } 
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateDeleteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateDeleteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateDeleteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateDeleteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUpdateDeleteVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAnuncio;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbFim;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbInicio;
    private javax.swing.JLabel lbIvstDia;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTable tbRegistros;
    private javax.swing.JTextField txtAnuncio;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JFormattedTextField txtDataFim;
    private javax.swing.JFormattedTextField txtDataIni;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIvstDia;
    // End of variables declaration//GEN-END:variables

    private void carregarCampos() {
        //Retorna a linha selecionada.
        int setar = tbRegistros.getSelectedRow();
        //Pega o valor da tabela na sua respectiva linha e coluna e atribui aos campos.
        txtId.setText(tbRegistros.getModel().getValueAt(setar, 0).toString());
        txtAnuncio.setText(tbRegistros.getModel().getValueAt(setar, 1).toString());
        txtCliente.setText(tbRegistros.getModel().getValueAt(setar, 2).toString());
        txtDataIni.setText(tbRegistros.getModel().getValueAt(setar, 3).toString());
        txtDataFim.setText(tbRegistros.getModel().getValueAt(setar, 4).toString());
        txtIvstDia.setText(tbRegistros.getModel().getValueAt(setar, 5).toString());
    }

    //Retorna todos os dados e lista eles na tabela.
    private void listarTodos() {
        try {
            //Instância classe.
            AnuncioDAO objanunciodao = new AnuncioDAO();
            //Cria um modelo de tabela e monta na tabela.
            DefaultTableModel model = (DefaultTableModel) tbRegistros.getModel();
            //Inicializa o modelo com 0 linhas.
            model.setNumRows(0);
            //Chama a função do DAO e adiciona ao objeto lista.
            ArrayList<AnuncioDTO> lista = objanunciodao.retornaTodos();
            //Loop que adiciona a lista na tabela.
            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new Object[]{
                    lista.get(i).getID_ANUNC(),
                    lista.get(i).getNO_ANUNC(),
                    lista.get(i).getNO_CLIENTE(),
                    lista.get(i).getDT_INIC(),
                    lista.get(i).getDT_TERM(),
                    lista.get(i).getVL_INVST_DIA()
                });
            }

        } catch (Exception erro) {
            //Exibe uma janela com o erro gerado.
            JOptionPane.showMessageDialog(null, "Erro (FrmUpdateDeleteVIEW|Listar Valores): " + erro);
        }
    }

    private void alterarAnuncio() {
        //Cria as variáveis.
        int id_anuncio;
        String anuncio, cliente, dt_ini, dt_fim, vl_ivst_dia, diaInicio, mesInicio, anoInicio, diaFim, mesFim, anoFim;

        //Formata as entradas de data para o padrão usado no sql
        diaInicio = txtDataIni.getText().substring(0, 2);
        mesInicio = txtDataIni.getText().substring(3, 5);
        anoInicio = txtDataIni.getText().substring(6);
        dt_ini = anoInicio + "-" + mesInicio + "-" + diaInicio;
        diaFim = txtDataFim.getText().substring(0, 2);
        mesFim = txtDataFim.getText().substring(3, 5);
        anoFim = txtDataFim.getText().substring(6);
        dt_fim = anoFim + "-" + mesFim + "-" + diaFim;
        //Passa os valores dos campos para as variáveis.
        id_anuncio = Integer.parseInt(txtId.getText());
        anuncio = txtAnuncio.getText();
        cliente = txtCliente.getText();
        vl_ivst_dia = txtIvstDia.getText();
        //Passa os valores para a DTO.
        AnuncioDTO objanunciodto = new AnuncioDTO();
        objanunciodto.setID_ANUNC(id_anuncio);
        objanunciodto.setNO_ANUNC(anuncio);
        objanunciodto.setNO_CLIENTE(cliente);
        objanunciodto.setDT_INIC(dt_ini);
        objanunciodto.setDT_TERM(dt_fim);
        objanunciodto.setVL_INVST_DIA(vl_ivst_dia);
        //Instância a classe.
        AnuncioDAO objanunciodao = new AnuncioDAO();
        //Passa todos os objetos para a função alterar no DAO.
        objanunciodao.alterarAnuncio(objanunciodto);
    }

    //Método que exclui um registro.
    private void excluirRegistro() {
        //Cria as variáveis.
        int id_anuncio;
        //Passa os valores dos campos para a variável.
        id_anuncio = Integer.parseInt(txtId.getText());
        //Passa os valores para a DTO.
        AnuncioDTO objanunciodto = new AnuncioDTO();
        objanunciodto.setID_ANUNC(id_anuncio);
        //Instância a classe.
        AnuncioDAO objanunciodao = new AnuncioDAO();
        //Passa todos os objetos para a função excluir no DAO.
        objanunciodao.excluirAnuncio(objanunciodto);
    }

    //Método que formata os campos de datas.
    private void formatarCampo() {
        try {
            //Cria o objeto e passa a máscara.
            MaskFormatter mascaraDt1 = new MaskFormatter("##/##/####");
            //Preenche os espaços vazios com o '_' enquanto os dados não forem inseridos. 
            mascaraDt1.setPlaceholderCharacter('_');
            //Instala a máscara no campo txtData1.
            mascaraDt1.install(txtDataIni);
            //Cria o objeto e passa a máscara.
            MaskFormatter mascaraDt2 = new MaskFormatter("##/##/####");
            //Preenche os espaços vazios com o '_' enquanto os dados não forem inseridos. 
            mascaraDt2.setPlaceholderCharacter('_');
            //Instala a máscara no campo txtData2.
            mascaraDt2.install(txtDataFim);

        } catch (ParseException erro) {
            //Exibe uma janela com o erro gerado.
            JOptionPane.showMessageDialog(null, "Erro ao formatar campo de texto, " + erro, "Erro", JOptionPane.ERROR);
        }
    }

    //Limpa os campos.
    private void limpaCampos() {
        txtId.setText("");
        txtAnuncio.setText("");
        txtCliente.setText("");
        txtDataIni.setText("");
        txtDataFim.setText("");
        txtIvstDia.setText("");

    }
}
